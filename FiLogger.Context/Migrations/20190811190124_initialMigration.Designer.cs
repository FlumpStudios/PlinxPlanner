// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlinxPlanner.Context.Data;

namespace PlinxPlanner.Context.Migrations
{
    [DbContext(typeof(AP_ReplacementContext))]
    [Migration("20190811190124_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PlinxPlanner.Common.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName");

                    b.Property<DateTime?>("FirstContactDate");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdateDate");

                    b.Property<string>("Surname")
                        .HasMaxLength(50);

                    b.Property<string>("Title")
                        .HasMaxLength(20);

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            CompanyName = "Test company 1",
                            FirstContactDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test Fname",
                            LastUpdateDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Test Surname",
                            Title = "Mr"
                        },
                        new
                        {
                            CustomerId = 2,
                            CompanyName = "Test company 2",
                            FirstContactDate = new DateTime(2019, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test Fname 2",
                            LastUpdateDate = new DateTime(2019, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Test Surname 2",
                            Title = "Mrs"
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.CustomerAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(50);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(50);

                    b.Property<string>("County")
                        .HasMaxLength(50);

                    b.Property<int>("CustomerId");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(100);

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30);

                    b.Property<string>("Postcode")
                        .HasMaxLength(20);

                    b.Property<string>("PropertyName")
                        .HasMaxLength(50);

                    b.Property<string>("PropertyNumber")
                        .HasMaxLength(20);

                    b.Property<string>("Town")
                        .HasMaxLength(50);

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerAddress");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressLine1 = "Line 1 test 1",
                            AddressLine2 = "Line 2 Test 1",
                            County = "Test County",
                            CustomerId = 1,
                            EmailAddress = "Test@Test.com",
                            MobileNumber = "01234 456789",
                            PhoneNumber = "01234 987654",
                            Postcode = "Test Postcode",
                            PropertyNumber = "50",
                            Town = "Test town"
                        },
                        new
                        {
                            AddressId = 2,
                            AddressLine1 = "Line 1 test 2",
                            AddressLine2 = "Line 2 Test 2",
                            County = "Test County 2",
                            CustomerId = 2,
                            EmailAddress = "Test2@Test.com",
                            MobileNumber = "01234 456781",
                            PhoneNumber = "01234 987652",
                            Postcode = "Test Postcode 2",
                            PropertyName = "Test prop name",
                            Town = "Test town 2"
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultComments", b =>
                {
                    b.Property<int>("DefaultCommentsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Content");

                    b.Property<int>("DefaultContentId");

                    b.HasKey("DefaultCommentsId");

                    b.HasIndex("DefaultContentId");

                    b.ToTable("DefaultComments");

                    b.HasData(
                        new
                        {
                            DefaultCommentsId = 1,
                            Author = "Mr Smith",
                            Content = "Comment will be added here",
                            DefaultContentId = 1
                        },
                        new
                        {
                            DefaultCommentsId = 2,
                            Author = "Mrs Jones",
                            Content = "Comment will be added here",
                            DefaultContentId = 1
                        },
                        new
                        {
                            DefaultCommentsId = 3,
                            Author = "Dr Peterson",
                            Content = "Comment will be added here",
                            DefaultContentId = 1
                        },
                        new
                        {
                            DefaultCommentsId = 4,
                            Author = "Mr Wright",
                            Content = "Comment will be added here",
                            DefaultContentId = 1
                        },
                        new
                        {
                            DefaultCommentsId = 5,
                            Author = "Miss Baker",
                            Content = "Comment will be added here",
                            DefaultContentId = 1
                        },
                        new
                        {
                            DefaultCommentsId = 6,
                            Author = "Mrs Hall",
                            Content = "Comment will be added here",
                            DefaultContentId = 1
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultContent", b =>
                {
                    b.Property<int>("DefaultContentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutSection");

                    b.Property<string>("Footer");

                    b.Property<string>("IntroText");

                    b.Property<string>("IntroTitle");

                    b.HasKey("DefaultContentId");

                    b.ToTable("DefaultContent");

                    b.HasData(
                        new
                        {
                            DefaultContentId = 1,
                            AboutSection = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            Footer = "Copyright © 2019 All rights reserved | This template is made with  by Colorlib",
                            IntroText = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            IntroTitle = "Hi, welcome to my site"
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultExperiance", b =>
                {
                    b.Property<int>("DefaultExperianceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<int>("DefaultContentId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FromDate");

                    b.Property<string>("JobTitle");

                    b.Property<DateTime?>("ToDate");

                    b.HasKey("DefaultExperianceId");

                    b.HasIndex("DefaultContentId");

                    b.ToTable("DefaultExperiance");

                    b.HasData(
                        new
                        {
                            DefaultExperianceId = 1,
                            Company = "Company 1",
                            DefaultContentId = 1,
                            Description = "Details of your work experiance go here",
                            FromDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobTitle = "Your Job Title"
                        },
                        new
                        {
                            DefaultExperianceId = 2,
                            Company = "Company 2",
                            DefaultContentId = 1,
                            Description = "Details of your work experiance go here",
                            FromDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobTitle = "Your Job Title",
                            ToDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DefaultExperianceId = 3,
                            Company = "Company 3",
                            DefaultContentId = 1,
                            Description = "Details of your work experiance go here",
                            FromDate = new DateTime(2017, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobTitle = "Your Job Title",
                            ToDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultPortfolio", b =>
                {
                    b.Property<int>("DefaultPortFolioId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefaultContentId");

                    b.Property<string>("ImageSrc");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("DefaultPortFolioId");

                    b.HasIndex("DefaultContentId");

                    b.ToTable("DefaultPortfolio");

                    b.HasData(
                        new
                        {
                            DefaultPortFolioId = 1,
                            DefaultContentId = 1,
                            ImageSrc = "http://www.testsrc.com",
                            Link = "http://www.testlink.com",
                            Name = "Project 1",
                            Type = "Website"
                        },
                        new
                        {
                            DefaultPortFolioId = 2,
                            DefaultContentId = 1,
                            ImageSrc = "http://www.testsrc.com",
                            Link = "http://www.testlink.com",
                            Name = "Project 2",
                            Type = "Website"
                        },
                        new
                        {
                            DefaultPortFolioId = 3,
                            DefaultContentId = 1,
                            ImageSrc = "http://www.testsrc.com",
                            Link = "http://www.testlink.com",
                            Name = "Project 3",
                            Type = "Website"
                        },
                        new
                        {
                            DefaultPortFolioId = 4,
                            DefaultContentId = 1,
                            ImageSrc = "http://www.testsrc.com",
                            Link = "http://www.testlink.com",
                            Name = "Project 4",
                            Type = "App"
                        },
                        new
                        {
                            DefaultPortFolioId = 5,
                            DefaultContentId = 1,
                            ImageSrc = "http://www.testsrc.com",
                            Link = "http://www.testlink.com",
                            Name = "Project 5",
                            Type = "App"
                        },
                        new
                        {
                            DefaultPortFolioId = 6,
                            DefaultContentId = 1,
                            ImageSrc = "http://www.testsrc.com",
                            Link = "http://www.testlink.com",
                            Name = "Project 6",
                            Type = "App"
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultSkills", b =>
                {
                    b.Property<int>("DefaultSkillsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefaultContentId");

                    b.Property<string>("Name");

                    b.Property<int>("Value");

                    b.HasKey("DefaultSkillsId");

                    b.HasIndex("DefaultContentId");

                    b.ToTable("DefaultSkills");

                    b.HasData(
                        new
                        {
                            DefaultSkillsId = 1,
                            DefaultContentId = 1,
                            Name = "C#",
                            Value = 90
                        },
                        new
                        {
                            DefaultSkillsId = 2,
                            DefaultContentId = 1,
                            Name = "CSS",
                            Value = 75
                        },
                        new
                        {
                            DefaultSkillsId = 3,
                            DefaultContentId = 1,
                            Name = "Javascript",
                            Value = 80
                        },
                        new
                        {
                            DefaultSkillsId = 4,
                            DefaultContentId = 1,
                            Name = "SQL",
                            Value = 70
                        },
                        new
                        {
                            DefaultSkillsId = 5,
                            DefaultContentId = 1,
                            Name = "C++",
                            Value = 55
                        },
                        new
                        {
                            DefaultSkillsId = 6,
                            DefaultContentId = 1,
                            Name = "Python",
                            Value = 87
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.SiteStatus", b =>
                {
                    b.Property<int>("SitesStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("SitesStatusId");

                    b.ToTable("SiteStatus");

                    b.HasData(
                        new
                        {
                            SitesStatusId = 1,
                            Name = "Pending"
                        },
                        new
                        {
                            SitesStatusId = 2,
                            Name = "Created"
                        },
                        new
                        {
                            SitesStatusId = 3,
                            Name = "Staging"
                        },
                        new
                        {
                            SitesStatusId = 4,
                            Name = "Live"
                        },
                        new
                        {
                            SitesStatusId = 5,
                            Name = "Cancelled"
                        },
                        new
                        {
                            SitesStatusId = 6,
                            Name = "Deleted"
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.Sitedetails", b =>
                {
                    b.Property<int>("SiteDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Base64Logo");

                    b.Property<int>("CustomerId");

                    b.Property<string>("PrimaryColor");

                    b.Property<string>("SecondaryColour");

                    b.Property<int>("SitesStatusId");

                    b.Property<bool>("SuperUserCreated");

                    b.Property<int>("TemplateId");

                    b.HasKey("SiteDetailsId");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.HasIndex("SitesStatusId");

                    b.ToTable("Sitedetails");

                    b.HasData(
                        new
                        {
                            SiteDetailsId = 1,
                            CustomerId = 1,
                            PrimaryColor = "FF0000",
                            SecondaryColour = "4800FF",
                            SitesStatusId = 1,
                            SuperUserCreated = false,
                            TemplateId = 1
                        },
                        new
                        {
                            SiteDetailsId = 2,
                            CustomerId = 2,
                            PrimaryColor = "4800FF",
                            SecondaryColour = "FF0000",
                            SitesStatusId = 2,
                            SuperUserCreated = false,
                            TemplateId = 2
                        });
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.CustomerAddress", b =>
                {
                    b.HasOne("PlinxPlanner.Common.Models.Customer")
                        .WithOne("CustomerAddress")
                        .HasForeignKey("PlinxPlanner.Common.Models.CustomerAddress", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultComments", b =>
                {
                    b.HasOne("PlinxPlanner.Common.Models.DefaultContent")
                        .WithMany("DefaultComments")
                        .HasForeignKey("DefaultContentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultExperiance", b =>
                {
                    b.HasOne("PlinxPlanner.Common.Models.DefaultContent")
                        .WithMany("DefaultExperiance")
                        .HasForeignKey("DefaultContentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultPortfolio", b =>
                {
                    b.HasOne("PlinxPlanner.Common.Models.DefaultContent")
                        .WithMany("DefaultPortfolio")
                        .HasForeignKey("DefaultContentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.DefaultSkills", b =>
                {
                    b.HasOne("PlinxPlanner.Common.Models.DefaultContent")
                        .WithMany("DefaultSkills")
                        .HasForeignKey("DefaultContentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlinxPlanner.Common.Models.Sitedetails", b =>
                {
                    b.HasOne("PlinxPlanner.Common.Models.Customer")
                        .WithOne("Sitedetails")
                        .HasForeignKey("PlinxPlanner.Common.Models.Sitedetails", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PlinxPlanner.Common.Models.SiteStatus", "SiteStatus")
                        .WithMany("Sitedetails")
                        .HasForeignKey("SitesStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
